/**
 * generated by Xtext 2.20.0
 */
package ru.iaie.reflex.diagram.reflex.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import ru.iaie.reflex.diagram.reflex.ReflexPackage;
import ru.iaie.reflex.diagram.reflex.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ru.iaie.reflex.diagram.reflex.impl.StatementImpl#isLoop <em>Loop</em>}</li>
 *   <li>{@link ru.iaie.reflex.diagram.reflex.impl.StatementImpl#isRestart <em>Restart</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementImpl extends MinimalEObjectImpl.Container implements Statement
{
  /**
   * The default value of the '{@link #isLoop() <em>Loop</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLoop()
   * @generated
   * @ordered
   */
  protected static final boolean LOOP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLoop() <em>Loop</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLoop()
   * @generated
   * @ordered
   */
  protected boolean loop = LOOP_EDEFAULT;

  /**
   * The default value of the '{@link #isRestart() <em>Restart</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRestart()
   * @generated
   * @ordered
   */
  protected static final boolean RESTART_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRestart() <em>Restart</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRestart()
   * @generated
   * @ordered
   */
  protected boolean restart = RESTART_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReflexPackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLoop()
  {
    return loop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLoop(boolean newLoop)
  {
    boolean oldLoop = loop;
    loop = newLoop;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.STATEMENT__LOOP, oldLoop, loop));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isRestart()
  {
    return restart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRestart(boolean newRestart)
  {
    boolean oldRestart = restart;
    restart = newRestart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.STATEMENT__RESTART, oldRestart, restart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReflexPackage.STATEMENT__LOOP:
        return isLoop();
      case ReflexPackage.STATEMENT__RESTART:
        return isRestart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReflexPackage.STATEMENT__LOOP:
        setLoop((Boolean)newValue);
        return;
      case ReflexPackage.STATEMENT__RESTART:
        setRestart((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.STATEMENT__LOOP:
        setLoop(LOOP_EDEFAULT);
        return;
      case ReflexPackage.STATEMENT__RESTART:
        setRestart(RESTART_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.STATEMENT__LOOP:
        return loop != LOOP_EDEFAULT;
      case ReflexPackage.STATEMENT__RESTART:
        return restart != RESTART_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (loop: ");
    result.append(loop);
    result.append(", restart: ");
    result.append(restart);
    result.append(')');
    return result.toString();
  }

} //StatementImpl
